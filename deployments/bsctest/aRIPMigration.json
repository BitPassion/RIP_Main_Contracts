{
  "address": "0x253397F37C0B9C5249D811597140CfF3CE4170D5",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "RIP",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aRIP",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "circulatingSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_RIP",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_aRIP",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_swapDuration",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_presale",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "migrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reclaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "senderInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner_",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xac8eb6af842c0feeac991c646c0b866fa8b72d939f5b03b7e144a2655982be3b",
  "receipt": {
    "to": null,
    "from": "0x0fbd6e14566A30906Bc0c927a75b1498aE87Fd43",
    "contractAddress": "0x253397F37C0B9C5249D811597140CfF3CE4170D5",
    "transactionIndex": 4,
    "gasUsed": "1078369",
    "logsBloom": "0x
    "blockHash": "0xbe9d60feb941f61dd7311a78a9f8e149b7167d7ca36b1a96f53dbe17cb1145ad",
    "transactionHash": "0xac8eb6af842c0feeac991c646c0b866fa8b72d939f5b03b7e144a2655982be3b",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 17641074,
        "transactionHash": "0xac8eb6af842c0feeac991c646c0b866fa8b72d939f5b03b7e144a2655982be3b",
        "address": "0x253397F37C0B9C5249D811597140CfF3CE4170D5",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000fbd6e14566a30906bc0c927a75b1498ae87fd43"
        ],
        "data": "0x",
        "logIndex": 4,
        "blockHash": "0xbe9d60feb941f61dd7311a78a9f8e149b7167d7ca36b1a96f53dbe17cb1145ad"
      }
    ],
    "blockNumber": 17641074,
    "cumulativeGasUsed": "1368292",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "20e90304e5d1c9e5d01d428aeb4325a8",
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"RIP\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aRIP\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circulatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_RIP\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aRIP\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_swapDuration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_presale\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reclaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"senderInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/aRIPMigration.sol\":\"aRIPMigration\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/aRIPMigration.sol\":{\"content\":\"/**\\r\\n *Submitted for verification at Etherscan.io on 2021-03-23\\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.7.5;\\r\\n\\r\\nimport \\\"./libraries/SafeMath.sol\\\";\\r\\n\\r\\nimport \\\"./interfaces/IERC20.sol\\\";\\r\\n\\r\\ninterface IOwnable {\\r\\n\\r\\n  function owner() external view returns (address);\\r\\n\\r\\n  function renounceOwnership() external;\\r\\n  \\r\\n  function transferOwnership( address newOwner_ ) external;\\r\\n}\\r\\n\\r\\ncontract Ownable is IOwnable {\\r\\n    \\r\\n  address internal _owner;\\r\\n\\r\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n  /**\\r\\n   * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n   */\\r\\n  constructor () {\\r\\n    _owner = msg.sender;\\r\\n    emit OwnershipTransferred( address(0), _owner );\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the address of the current owner.\\r\\n   */\\r\\n  function owner() public view override returns (address) {\\r\\n    return _owner;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Throws if called by any account other than the owner.\\r\\n   */\\r\\n  modifier onlyOwner() {\\r\\n    require( _owner == msg.sender, \\\"Ownable: caller is not the owner\\\" );\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Leaves the contract without owner. It will not be possible to call\\r\\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n   *\\r\\n   * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n   * thereby removing any functionality that is only available to the owner.\\r\\n   */\\r\\n  function renounceOwnership() public virtual override onlyOwner() {\\r\\n    emit OwnershipTransferred( _owner, address(0) );\\r\\n    _owner = address(0);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n   * Can only be called by the current owner.\\r\\n   */\\r\\n  function transferOwnership( address newOwner_ ) public virtual override onlyOwner() {\\r\\n    require( newOwner_ != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n    emit OwnershipTransferred( _owner, newOwner_ );\\r\\n    _owner = newOwner_;\\r\\n  }\\r\\n}\\r\\n\\r\\ncontract aRIPMigration is Ownable {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  uint256 swapEndBlock;\\r\\n\\r\\n  IERC20 public RIP;\\r\\n  IERC20 public aRIP;\\r\\n\\r\\n  address presale;\\r\\n  \\r\\n  bool public isInitialized;\\r\\n\\r\\n  mapping(address => uint256) public senderInfo;\\r\\n  \\r\\n  modifier onlyInitialized() {\\r\\n    require(isInitialized, \\\"not initialized\\\");\\r\\n    _;\\r\\n  }\\r\\n  \\r\\n  modifier notInitialized() {\\r\\n    require( !isInitialized, \\\"already initialized\\\" );\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  function initialize (\\r\\n    address _RIP,\\r\\n    address _aRIP,\\r\\n    uint256 _swapDuration,\\r\\n    address _presale\\r\\n  ) public onlyOwner() notInitialized() {\\r\\n    RIP = IERC20(_RIP);\\r\\n    aRIP = IERC20(_aRIP);\\r\\n    presale = _presale;\\r\\n    swapEndBlock = block.number.add(_swapDuration);\\r\\n    isInitialized = true;\\r\\n  }\\r\\n\\r\\n  function migrate(uint256 amount) external onlyInitialized() {\\r\\n    require(\\r\\n        aRIP.balanceOf(msg.sender) >= amount,\\r\\n        \\\"amount above user balance\\\"\\r\\n    );\\r\\n    require(block.number < swapEndBlock, \\\"swapping of aRIP has ended\\\");\\r\\n    require(RIP.balanceOf(address(this)) > 0, \\\"RIP not enough\\\");\\r\\n\\r\\n    aRIP.transferFrom(msg.sender, address(this), amount);\\r\\n    senderInfo[msg.sender] = senderInfo[msg.sender].add(amount);\\r\\n    require(circulatingSupply() > 0, \\\"no supply\\\");\\r\\n    uint256 ripAmount = RIP.balanceOf(address(this)).mul(amount).div(circulatingSupply());\\r\\n    RIP.transfer(msg.sender, ripAmount);\\r\\n  }\\r\\n\\r\\n  function reclaim() external {\\r\\n    require(senderInfo[msg.sender] > 0, \\\"user has no aRIP to withdraw\\\");\\r\\n    require(\\r\\n        block.number > swapEndBlock,\\r\\n        \\\"aRIP swap is still ongoing\\\"\\r\\n    );\\r\\n\\r\\n    uint256 amount = senderInfo[msg.sender];\\r\\n    senderInfo[msg.sender] = 0;\\r\\n    aRIP.transfer(msg.sender, amount);\\r\\n  }\\r\\n\\r\\n  function withdraw(address token) external onlyOwner() {\\r\\n    require(block.number > swapEndBlock, \\\"swapping of aRIP has not ended\\\");\\r\\n    require(token != address(aRIP), \\\"aRIP is not allowed to be withdrawn\\\");\\r\\n    uint256 amount = IERC20(token).balanceOf(address(this));\\r\\n    require(amount > 0, \\\"no token balance\\\");\\r\\n    IERC20(token).transfer(msg.sender, amount);\\r\\n  }\\r\\n\\r\\n  function circulatingSupply() public view returns (uint256) {\\r\\n    return IERC20(aRIP).totalSupply().sub(IERC20(aRIP).balanceOf(presale)).sub(IERC20(aRIP).balanceOf(address(this))).sub(IERC20(aRIP).balanceOf(_owner));\\r\\n  }\\r\\n}\",\"keccak256\":\"0x7ae515863afbabe305109eaed9db0554d4a5ad4749ffe30eba7c8cfe0441cb4b\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\"},\"contracts/libraries/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.7.5;\\n\\n// TODO(zx): Replace all instances of SafeMath with OZ implementation\\nlibrary SafeMath {\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        assert(a == b * c + (a % b)); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    // Only used in the  BondingCalculator.sol\\n    function sqrrt(uint256 a) internal pure returns (uint256 c) {\\n        if (a > 3) {\\n            c = a;\\n            uint256 b = add(div(a, 2), 1);\\n            while (b < c) {\\n                c = b;\\n                b = div(add(div(a, b), b), 2);\\n            }\\n        } else if (a != 0) {\\n            c = 1;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf2edfc9cacbecb4aa48c6e5752a2d87939b450b64c18e77ad1098430d0772005\",\"license\":\"AGPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3611224806100696000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80639358928b11610081578063be2030941161005b578063be203094146101b6578063ce61dc91146101f2578063f2fde38b146101fa576100d4565b80639358928b1461016e5780639fca13ae14610188578063a6dd4c6614610190576100d4565b8063715018a6116100b2578063715018a61461013a57806380e9071b146101425780638da5cb5b1461014a576100d4565b8063392e53cd146100d9578063454b0608146100f557806351cff8d914610114575b600080fd5b6100e1610220565b604080519115158252519081900360200190f35b6101126004803603602081101561010b57600080fd5b5035610230565b005b6101126004803603602081101561012a57600080fd5b50356001600160a01b03166106a0565b6101126108c0565b610112610976565b610152610ac8565b604080516001600160a01b039092168252519081900360200190f35b610176610ad7565b60408051918252519081900360200190f35b610152610cd5565b610176600480360360208110156101a657600080fd5b50356001600160a01b0316610ce4565b610112600480360360808110156101cc57600080fd5b506001600160a01b03813581169160208101358216916040820135916060013516610cf6565b610152610e3f565b6101126004803603602081101561021057600080fd5b50356001600160a01b0316610e4e565b600454600160a01b900460ff1681565b600454600160a01b900460ff1661028e576040805162461bcd60e51b815260206004820152600f60248201527f6e6f7420696e697469616c697a65640000000000000000000000000000000000604482015290519081900360640190fd5b600354604080516370a0823160e01b8152336004820152905183926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156102d857600080fd5b505afa1580156102ec573d6000803e3d6000fd5b505050506040513d602081101561030257600080fd5b50511015610357576040805162461bcd60e51b815260206004820152601960248201527f616d6f756e742061626f766520757365722062616c616e636500000000000000604482015290519081900360640190fd5b60015443106103ad576040805162461bcd60e51b815260206004820152601a60248201527f7377617070696e67206f6620615249502068617320656e646564000000000000604482015290519081900360640190fd5b600254604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156103f857600080fd5b505afa15801561040c573d6000803e3d6000fd5b505050506040513d602081101561042257600080fd5b505111610476576040805162461bcd60e51b815260206004820152600e60248201527f524950206e6f7420656e6f756768000000000000000000000000000000000000604482015290519081900360640190fd5b600354604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b1580156104d057600080fd5b505af11580156104e4573d6000803e3d6000fd5b505050506040513d60208110156104fa57600080fd5b5050336000908152600560205260409020546105169082610f5a565b33600090815260056020526040812091909155610531610ad7565b11610583576040805162461bcd60e51b815260206004820152600960248201527f6e6f20737570706c790000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6000610619610590610ad7565b600254604080516370a0823160e01b815230600482015290516106139287926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b1580156105e157600080fd5b505afa1580156105f5573d6000803e3d6000fd5b505050506040513d602081101561060b57600080fd5b505190610fbd565b90611016565b6002546040805163a9059cbb60e01b81523360048201526024810184905290519293506001600160a01b039091169163a9059cbb916044808201926020929091908290030181600087803b15801561067057600080fd5b505af1158015610684573d6000803e3d6000fd5b505050506040513d602081101561069a57600080fd5b50505050565b6000546001600160a01b031633146106ff576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001544311610755576040805162461bcd60e51b815260206004820152601e60248201527f7377617070696e67206f66206152495020686173206e6f7420656e6465640000604482015290519081900360640190fd5b6003546001600160a01b03828116911614156107a25760405162461bcd60e51b81526004018080602001828103825260238152602001806111d46023913960400191505060405180910390fd5b6000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156107f157600080fd5b505afa158015610805573d6000803e3d6000fd5b505050506040513d602081101561081b57600080fd5b5051905080610871576040805162461bcd60e51b815260206004820152601060248201527f6e6f20746f6b656e2062616c616e636500000000000000000000000000000000604482015290519081900360640190fd5b6040805163a9059cbb60e01b81523360048201526024810183905290516001600160a01b0384169163a9059cbb9160448083019260209291908290030181600087803b15801561067057600080fd5b6000546001600160a01b0316331461091f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b336000908152600560205260409020546109d7576040805162461bcd60e51b815260206004820152601c60248201527f7573657220686173206e6f206152495020746f20776974686472617700000000604482015290519081900360640190fd5b6001544311610a2d576040805162461bcd60e51b815260206004820152601a60248201527f615249502073776170206973207374696c6c206f6e676f696e67000000000000604482015290519081900360640190fd5b336000818152600560209081526040808320805490849055600354825163a9059cbb60e01b8152600481019690965260248601829052915190946001600160a01b039092169363a9059cbb93604480850194919392918390030190829087803b158015610a9957600080fd5b505af1158015610aad573d6000803e3d6000fd5b505050506040513d6020811015610ac357600080fd5b505050565b6000546001600160a01b031690565b60035460008054604080516370a0823160e01b81526001600160a01b03928316600482015290519293610cd0939216916370a0823191602480820192602092909190829003018186803b158015610b2d57600080fd5b505afa158015610b41573d6000803e3d6000fd5b505050506040513d6020811015610b5757600080fd5b5051600354604080516370a0823160e01b81523060048201529051610cca926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610ba557600080fd5b505afa158015610bb9573d6000803e3d6000fd5b505050506040513d6020811015610bcf57600080fd5b505160035460048054604080516370a0823160e01b81526001600160a01b039283169381019390935251610cca9391909116916370a08231916024808301926020929190829003018186803b158015610c2757600080fd5b505afa158015610c3b573d6000803e3d6000fd5b505050506040513d6020811015610c5157600080fd5b5051600354604080516318160ddd60e01b815290516001600160a01b03909216916318160ddd91600480820192602092909190829003018186803b158015610c9857600080fd5b505afa158015610cac573d6000803e3d6000fd5b505050506040513d6020811015610cc257600080fd5b505190611058565b90611058565b905090565b6003546001600160a01b031681565b60056020526000908152604090205481565b6000546001600160a01b03163314610d55576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600454600160a01b900460ff1615610db4576040805162461bcd60e51b815260206004820152601360248201527f616c726561647920696e697469616c697a656400000000000000000000000000604482015290519081900360640190fd5b600280546001600160a01b0380871673ffffffffffffffffffffffffffffffffffffffff1992831617909255600380548684169083161790556004805492841692909116919091179055610e084383610f5a565b6001555050600480547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b1790555050565b6002546001600160a01b031681565b6000546001600160a01b03163314610ead576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610ef25760405162461bcd60e51b81526004018080602001828103825260268152602001806111ae6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600082820183811015610fb4576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b600082610fcc57506000610fb7565b82820282848281610fd957fe5b0414610fb45760405162461bcd60e51b81526004018080602001828103825260218152602001806111f76021913960400191505060405180910390fd5b6000610fb483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061109a565b6000610fb483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611153565b600081836111265760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156110eb5781810151838201526020016110d3565b50505050905090810190601f1680156111185780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161113257fe5b04905083858161113e57fe5b0681850201851461114b57fe5b949350505050565b600081848411156111a55760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156110eb5781810151838201526020016110d3565b50505090039056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737361524950206973206e6f7420616c6c6f77656420746f2062652077697468647261776e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a164736f6c6343000705000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100d45760003560e01c80639358928b11610081578063be2030941161005b578063be203094146101b6578063ce61dc91146101f2578063f2fde38b146101fa576100d4565b80639358928b1461016e5780639fca13ae14610188578063a6dd4c6614610190576100d4565b8063715018a6116100b2578063715018a61461013a57806380e9071b146101425780638da5cb5b1461014a576100d4565b8063392e53cd146100d9578063454b0608146100f557806351cff8d914610114575b600080fd5b6100e1610220565b604080519115158252519081900360200190f35b6101126004803603602081101561010b57600080fd5b5035610230565b005b6101126004803603602081101561012a57600080fd5b50356001600160a01b03166106a0565b6101126108c0565b610112610976565b610152610ac8565b604080516001600160a01b039092168252519081900360200190f35b610176610ad7565b60408051918252519081900360200190f35b610152610cd5565b610176600480360360208110156101a657600080fd5b50356001600160a01b0316610ce4565b610112600480360360808110156101cc57600080fd5b506001600160a01b03813581169160208101358216916040820135916060013516610cf6565b610152610e3f565b6101126004803603602081101561021057600080fd5b50356001600160a01b0316610e4e565b600454600160a01b900460ff1681565b600454600160a01b900460ff1661028e576040805162461bcd60e51b815260206004820152600f60248201527f6e6f7420696e697469616c697a65640000000000000000000000000000000000604482015290519081900360640190fd5b600354604080516370a0823160e01b8152336004820152905183926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156102d857600080fd5b505afa1580156102ec573d6000803e3d6000fd5b505050506040513d602081101561030257600080fd5b50511015610357576040805162461bcd60e51b815260206004820152601960248201527f616d6f756e742061626f766520757365722062616c616e636500000000000000604482015290519081900360640190fd5b60015443106103ad576040805162461bcd60e51b815260206004820152601a60248201527f7377617070696e67206f6620615249502068617320656e646564000000000000604482015290519081900360640190fd5b600254604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156103f857600080fd5b505afa15801561040c573d6000803e3d6000fd5b505050506040513d602081101561042257600080fd5b505111610476576040805162461bcd60e51b815260206004820152600e60248201527f524950206e6f7420656e6f756768000000000000000000000000000000000000604482015290519081900360640190fd5b600354604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b1580156104d057600080fd5b505af11580156104e4573d6000803e3d6000fd5b505050506040513d60208110156104fa57600080fd5b5050336000908152600560205260409020546105169082610f5a565b33600090815260056020526040812091909155610531610ad7565b11610583576040805162461bcd60e51b815260206004820152600960248201527f6e6f20737570706c790000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6000610619610590610ad7565b600254604080516370a0823160e01b815230600482015290516106139287926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b1580156105e157600080fd5b505afa1580156105f5573d6000803e3d6000fd5b505050506040513d602081101561060b57600080fd5b505190610fbd565b90611016565b6002546040805163a9059cbb60e01b81523360048201526024810184905290519293506001600160a01b039091169163a9059cbb916044808201926020929091908290030181600087803b15801561067057600080fd5b505af1158015610684573d6000803e3d6000fd5b505050506040513d602081101561069a57600080fd5b50505050565b6000546001600160a01b031633146106ff576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001544311610755576040805162461bcd60e51b815260206004820152601e60248201527f7377617070696e67206f66206152495020686173206e6f7420656e6465640000604482015290519081900360640190fd5b6003546001600160a01b03828116911614156107a25760405162461bcd60e51b81526004018080602001828103825260238152602001806111d46023913960400191505060405180910390fd5b6000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156107f157600080fd5b505afa158015610805573d6000803e3d6000fd5b505050506040513d602081101561081b57600080fd5b5051905080610871576040805162461bcd60e51b815260206004820152601060248201527f6e6f20746f6b656e2062616c616e636500000000000000000000000000000000604482015290519081900360640190fd5b6040805163a9059cbb60e01b81523360048201526024810183905290516001600160a01b0384169163a9059cbb9160448083019260209291908290030181600087803b15801561067057600080fd5b6000546001600160a01b0316331461091f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b336000908152600560205260409020546109d7576040805162461bcd60e51b815260206004820152601c60248201527f7573657220686173206e6f206152495020746f20776974686472617700000000604482015290519081900360640190fd5b6001544311610a2d576040805162461bcd60e51b815260206004820152601a60248201527f615249502073776170206973207374696c6c206f6e676f696e67000000000000604482015290519081900360640190fd5b336000818152600560209081526040808320805490849055600354825163a9059cbb60e01b8152600481019690965260248601829052915190946001600160a01b039092169363a9059cbb93604480850194919392918390030190829087803b158015610a9957600080fd5b505af1158015610aad573d6000803e3d6000fd5b505050506040513d6020811015610ac357600080fd5b505050565b6000546001600160a01b031690565b60035460008054604080516370a0823160e01b81526001600160a01b03928316600482015290519293610cd0939216916370a0823191602480820192602092909190829003018186803b158015610b2d57600080fd5b505afa158015610b41573d6000803e3d6000fd5b505050506040513d6020811015610b5757600080fd5b5051600354604080516370a0823160e01b81523060048201529051610cca926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610ba557600080fd5b505afa158015610bb9573d6000803e3d6000fd5b505050506040513d6020811015610bcf57600080fd5b505160035460048054604080516370a0823160e01b81526001600160a01b039283169381019390935251610cca9391909116916370a08231916024808301926020929190829003018186803b158015610c2757600080fd5b505afa158015610c3b573d6000803e3d6000fd5b505050506040513d6020811015610c5157600080fd5b5051600354604080516318160ddd60e01b815290516001600160a01b03909216916318160ddd91600480820192602092909190829003018186803b158015610c9857600080fd5b505afa158015610cac573d6000803e3d6000fd5b505050506040513d6020811015610cc257600080fd5b505190611058565b90611058565b905090565b6003546001600160a01b031681565b60056020526000908152604090205481565b6000546001600160a01b03163314610d55576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600454600160a01b900460ff1615610db4576040805162461bcd60e51b815260206004820152601360248201527f616c726561647920696e697469616c697a656400000000000000000000000000604482015290519081900360640190fd5b600280546001600160a01b0380871673ffffffffffffffffffffffffffffffffffffffff1992831617909255600380548684169083161790556004805492841692909116919091179055610e084383610f5a565b6001555050600480547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b1790555050565b6002546001600160a01b031681565b6000546001600160a01b03163314610ead576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610ef25760405162461bcd60e51b81526004018080602001828103825260268152602001806111ae6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600082820183811015610fb4576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b600082610fcc57506000610fb7565b82820282848281610fd957fe5b0414610fb45760405162461bcd60e51b81526004018080602001828103825260218152602001806111f76021913960400191505060405180910390fd5b6000610fb483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061109a565b6000610fb483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611153565b600081836111265760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156110eb5781810151838201526020016110d3565b50505050905090810190601f1680156111185780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161113257fe5b04905083858161113e57fe5b0681850201851461114b57fe5b949350505050565b600081848411156111a55760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156110eb5781810151838201526020016110d3565b50505090039056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737361524950206973206e6f7420616c6c6f77656420746f2062652077697468647261776e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a164736f6c6343000705000a",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4576,
        "contract": "contracts/aRIPMigration.sol:aRIPMigration",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4683,
        "contract": "contracts/aRIPMigration.sol:aRIPMigration",
        "label": "swapEndBlock",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 4685,
        "contract": "contracts/aRIPMigration.sol:aRIPMigration",
        "label": "RIP",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)7781"
      },
      {
        "astId": 4687,
        "contract": "contracts/aRIPMigration.sol:aRIPMigration",
        "label": "aRIP",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IERC20)7781"
      },
      {
        "astId": 4689,
        "contract": "contracts/aRIPMigration.sol:aRIPMigration",
        "label": "presale",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 4691,
        "contract": "contracts/aRIPMigration.sol:aRIPMigration",
        "label": "isInitialized",
        "offset": 20,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 4695,
        "contract": "contracts/aRIPMigration.sol:aRIPMigration",
        "label": "senderInfo",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)7781": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}